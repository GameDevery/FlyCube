cmake_minimum_required (VERSION 3.2.2)

set (PROJECT FlyCube)
project (${PROJECT})

set(project_root ${CMAKE_CURRENT_SOURCE_DIR})
set(assets_path ${CMAKE_CURRENT_SOURCE_DIR}/assets/)
set(sdkbin_path "C:/Program Files (x86)/Windows Kits/10/Bin/${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}")

#compiler settings
include(${project_root}/cmake/defaults.cmake)

add_definitions(-DASSETS_PATH="${assets_path}")
add_definitions(-DSDKBIN="${sdkbin_path}")

set(VULKAN_SUPPORT ON)
if (WIN32)
    set(DIRECTX_SUPPORT ON)
    set(RAYTRACING_SUPPORT ON)
endif()

include(${project_root}/cmake/3rdparty/glfw.cmake)
include(${project_root}/cmake/3rdparty/soil.cmake)
include(${project_root}/cmake/3rdparty/assimp.cmake)
include(${project_root}/cmake/3rdparty/glm.cmake)
include(${project_root}/cmake/3rdparty/gli.cmake)
include(${project_root}/cmake/3rdparty/glad.cmake)
include(${project_root}/cmake/3rdparty/mustache.cmake)
include(${project_root}/cmake/3rdparty/imgui.cmake)
include(${project_root}/cmake/3rdparty/spirv-cross.cmake)

if (VULKAN_SUPPORT)
    include(${project_root}/cmake/3rdparty/vulkan.cmake)
    add_definitions(-DVULKAN_SUPPORT)
    add_definitions(-DVK_NO_PROTOTYPES)
    add_definitions(-DVULKAN_HPP_DISPATCH_LOADER_DYNAMIC=1)
    if (WIN32)
        add_definitions(-DVK_USE_PLATFORM_WIN32_KHR)
    else()
        add_definitions(-DVK_USE_PLATFORM_XCB_KHR)
    endif()
endif()
if (DIRECTX_SUPPORT)
    add_definitions(-DDIRECTX_SUPPORT)
endif()
if (RAYTRACING_SUPPORT)
    add_definitions(-DRAYTRACING_SUPPORT)
endif()
include(${project_root}/cmake/3rdparty/dxc.cmake)

add_subdirectory(src)
